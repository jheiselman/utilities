#!/bin/bash

IPTABLES_LOGS=""

. $APP_HOME/common_functions.sh

today=$(date +"%h %d")
hour_past=$(date --date='-5 minutes' +"%H")
minute_past=$(date --date='-5 minutes' +"%-M")
hour=$(date +"%H")
minute=$(date +"%-M")
minutes=""
if [[ $((minute - minute_past)) -lt 0 ]]; then
  i=60
  while [[ $i -gt $minute_past ]]; do
    [[ $i -lt 10 ]] && minutes=$(echo "$minutes,0$i")
    [[ $i -ge 10 ]] && minutes=$(echo "$minutes,$i")
    let i=i-1
  done
  i=0
  while [[ $i -le $minute ]]; do
    [[ $i -lt 10 ]] && minutes=$(echo "$minutes,0$i")
    [[ $i -ge 10 ]] && minutes=$(echo "$minutes,$i")
    let i=i+1
  done
else
  i=$minute
  while [[ $i -gt $minute_past ]]; do
    [[ $i -lt 10 ]] && minutes=$(echo "$minutes,0$i")
    [[ $i -ge 10 ]] && minutes=$(echo "$minutes,$i")
    let i=i-1
  done
fi
minutes=${minutes:1}

localnet=$(ip route list scope link |sed -r -e 's/[0-9]+\/.*//g' -e 's/\./\\./g')

for entry in $IPTABLES_LOGS; do
  sname=$(sanitize_varsV2 "SSH_Connects")
  last_status=$(get_last_statusV2 $sname "LOG")
  new_status=$last_status
  limit=1

  num_connects=$(grep -- "$today" $entry |grep -v "$localnet" |grep -c -P " [$hour_past,$hour]:[$minutes]" || true)
  if [[ $num_connects -gt $limit ]]; then
    if [[ "$last_status" != "BAD" ]]; then
      send_notice "SSH Connect Attempts" "Number of SSH connection attempts in the last five minutes has been $num_connects"
      new_status="BAD"
    fi
  else
    if [[ "$last_status" != "OK" ]]; then
      #send_notice "SSH Connect Attempts" "Number of SSH connection attempts in the last five minutes has been $num_connects"
      new_status="OK"
    fi
  fi

  record_status $sname "LOG" $new_status "Number of Attempts: $num_connects"
done
