#!/bin/sh

[ -z $1 ] && echo "$0: must supply status file path" >&2 && exit 1
[ -z $2 ] && echo "$0: must supply output path" >&2 && exit 1
[ -z $3 ] && echo "$0: must supply notification log path" >&2 && exit 1

status_file=$1
output_file=$2
notify_file=$3

output_start=$(cat << "START"
<!DOCTYPE html>
<html lang"en-US">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="refresh" content="60">
  <title>Monitoring</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="monitoring.css">
</head>
<body>
  <header class="header">
  </header>
  <section class="monitors">
    <h2>Monitor List</h2>
    <table>
      <thead>
        <tr>
          <th class="target">Target</th>
          <th class="type">Type</th>
          <th class="state">State</th>
          <th class="status">Status</th>
        </tr>
      </thead>
      <tbody id="monitor_list">
START
)

lastchange=$(stat -c '%y' "$notify_file" |cut -d. -f1)
lastrefresh=$(date +"%Y-%m-%d %H:%M:%S")

output_end=$(cat << END
      </tbody>
    </table>
  </section>
  <footer>
    <div>
      <div>
        <ul>
          <li>Last Change: <span id="last_updated">$lastchange</span></li>
          <li>Last Refresh: <span id="status">{{.Now "2006-01-02 15:04:05"}}</span></li>
          <li>Your IP: <span id="remote_addr">{{.IP}}</span></li>
        </ul>
      </div>
    </div>
  </footer>
</body>
</html>

END
)

output_middle=$(sort -n "$status_file" |while read -r line; do
  name="${line%%,*}"
  [ "$name" = "#name" ] && continue
  type=${line#*,}
  type=${type%%,*}
  state=${line%,*}
  state=${state##*,}
  status=${line##*,}

  cat << TABLE
        $output_middle<tr><td class="target">$name</td><td class="type">$type</td><td class="state $state">$state</td><td class="status">$status</td></tr>
TABLE
done
)

printf "$output_start\n$output_middle\n$output_end" > "$output_file"

