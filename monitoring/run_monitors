#!/bin/sh

CONFIG_PATH="$HOME/.config/monitoring/config"

if [ ! -e "$CONFIG_PATH" ]; then
  APP_HOME=$(dirname $(realpath $0))
  echo "No configuration file found at $CONFIG_PATH" >&2
  echo "APP_HOME=$APP_HOME
STATUS_FILE=$HOME/.local/monitoring/status.log
NOTIFY_LOG=$HOME/.local/monitoring/notify.log
CHATBRIDGE_PORT=9001
notify_script=$HOME/scripts/notify
status_lock=/tmp/monitoring_status.lck
html_output=$HOME/public_html/monitoring.html
" > "$CONFIG_PATH"
  echo "Created default configuration file." >&2
fi

. "$CONFIG_PATH"

if [ ! -e "$STATUS_FILE" ]; then
  status_dir=$(dirname "$STATUS_FILE")
  mkdir -p "$status_dir"
  echo "#name,type,state,status" > $STATUS_FILE
fi

# Read file and run monitors based

. $APP_HOME/common.sh

run_monitor ()
{
  type=$1
  name=$2
  shift
  shift
  cmd=$*
  
  prev_state=$(read_monitor "$name" "$type")
  output=$($cmd)
  state=$(echo "$output" |cut -d\; -f1)
  status=$(echo "$output" |cut -d\; -f2)
  if [ "$prev_state" != "$state" ]; then
    notify "$name ($type) State" "$name ($type): $state"
  fi
  save_monitor "$name" "$type" "$state" "$status"
}

for proc in $procs; do
  run_monitor "PROC" "$proc" "$APP_HOME/check_proc $proc"
done

for service in $services; do
  run_monitor "SYSTEMD" "$service" "$APP_HOME/check_systemd_service $service"
done

for router_version in $router_version; do
  run_monitor "Router Version" "Router Version" "$APP_HOME/check_router_ver $router_version"
done

for router_mem in $router_mem; do
  run_monitor "Memory" "Router Mem" "$APP_HOME/check_ssh_mem $router_mem"
done

for router_load in $router_load; do
  run_monitor "Load" "Router Load" "$APP_HOME/check_ssh_load $router_load"
done

for url in $http; do
  run_monitor "HTTP" "${url%%\?*}" "$APP_HOME/check_http $url"
done

for log in $check_http_errors; do
  run_monitor "HTTP Errors" $(basename "$log") "$APP_HOME/check_http_errors $log"
done

if [ -n $reboot_required ]; then
  run_monitor "Reboot" "Reboot Required" "$APP_HOME/check_reboot"
fi

$APP_HOME/create_html "$STATUS_FILE" "$html_output" "$NOTIFY_LOG"
